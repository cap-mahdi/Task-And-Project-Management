type Task {
  id: String!
  name: String!
  description: String!
  status: Status!
  tags: [String!]!
  milestone: Milestone!
  comments: [Comment!]!
  userTasks: [UserTask!]!
  creator: User!
}

input CreateTask {
  name: String!
  description: String!
  tags: [String!]!
  assignees: [String!]!
}

input UpdateTask {
  name: String
  description: String
  status: Status
  tags: [String!]
  assignees: [String!]
}

input UserFilter {
  projectId: String
  mileStoneId: String
}



type Query {
  tasks(filter: UserFilter): [Task!]!
  task(id: ID!): Task!
}

type Mutation {
  createTask(input: CreateTask!,milestoneId: String!): Task!
  updateTask(id: String!, input: UpdateTask!): Task!
  deleteTask(id: String!): Boolean!
}
