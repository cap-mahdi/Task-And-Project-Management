import {
  Avatar,
  List,
  ListItem,
  ListItemAvatar,
  ListItemText,
  Typography,
} from '@mui/material';
import React, { FC, useContext, useEffect, useState } from 'react';
import { SxPropsObject } from '../../../utils/sxPropsObject';
import { SocketContext } from '../../../context/useSocketContext';
import useProjectContext from '../../../context/useProjectContext';
import useAppContext from '../../../context/useAppContext';
import { log } from 'console';
// const messages = [
//   {
//     id: 1,
//     primary: 'Brunch this week?',
//     secondary:
//       "I'll be in the neighbourhood this week. Let's grab a bite to eat",
//     person: '/static/images/avatar/5.jpg',
//   },
//   {
//     id: 2,
//     primary: 'Birthday Gift',
//     secondary: `Do you have a suggestion for a good present for John on his work
//       anniversary. I am really confused & would love your thoughts on it.`,
//     person: '/static/images/avatar/1.jpg',
//   },
//   {
//     id: 3,
//     primary: 'Recipe to try',
//     secondary:
//       'I am try out this new BBQ recipe, I think this might be amazing',
//     person: '/static/images/avatar/2.jpg',
//   },
//   {
//     id: 4,
//     primary: 'Yes!',
//     secondary: 'I have the tickets to the ReactConf for this year.',
//     person: '/static/images/avatar/3.jpg',
//   },
//   {
//     id: 5,
//     primary: "Doctor's Appointment",
//     secondary:
//       'My appointment for the doctor was rescheduled for next Saturday.',
//     person: '/static/images/avatar/4.jpg',
//   },
//   {
//     id: 6,
//     primary: 'Discussion',
//     secondary: `Menus that are generated by the bottom app bar (such as a bottom
//       navigation drawer or overflow menu) open as bottom sheets at a higher elevation
//       than the bar.`,
//     person: '/static/images/avatar/5.jpg',
//   },
//   {
//     id: 7,
//     primary: 'Summer BBQ',
//     secondary: `Who wants to have a cookout this weekend? I just got some furniture
//       for my backyard and would love to fire up the grill.`,
//     person: '/static/images/avatar/1.jpg',
//   },
//   {
//     id: 8,

//     primary: 'Summer BBQ',
//     secondary: `Who wants to have a cookout this weekend? I just got some furniture
//       for my backyard and would love to fire up the grill.`,
//     person: '/static/images/avatar/1.jpg',
//   },
//   {
//     id: 9,
//     primary: 'Summer BBQ',
//     secondary: `Who wants to have a cookout this weekend? I just got some furniture
//       for my backyard and would love to fire up the grill.`,
//     person: '/static/images/avatar/1.jpg',
//   },
// ];

export const MessageList: FC = () => {
  const styles: SxPropsObject = {
    cnvBox: {
      fontSize: '3px',
      maxWidth: '40%',
      border: '1px solid #f0f0f0',
      borderRadius: 4,
      padding: 2,
      marginRight: 'auto',
      boxShadow: '14px 18px 21px -10px rgba(0,0,0,0.25)',
      WebkitBoxShadow: '14px 18px 21px -10px rgba(0,0,0,0.25)',
    },
  };
  const socket = useContext(SocketContext);
  const [projectState, setProjectState] = useProjectContext();
  const [globalState] = useAppContext();
  useEffect(() => {
    socket.on('receivemessage', (data: any) => {
      console.log('data from server ', data);
      // console.log('globalState.user.id', globalState.user.id);
      setProjectState((prevState) => {
        return {
          ...prevState,
          messages: [
            ...prevState.messages,
            {
              id: data.id,
              content: data.content,
              sender: data.sender,
            },
          ],
        };
      });
    });
  }, []);

  return (
    <List
      sx={{
        overflow: 'auto',
      }}
    >
      {globalState.user && projectState?.messages
        ? projectState?.messages.map((message) => {
            console.log('message', message);
            return (
              <React.Fragment key={message.id}>
                {/* <Typography>{globalState.user.id}</Typography> */}
                <ListItem
                  sx={{
                    ':hover': {
                      backgroundColor: 'transparent',
                      cursor: 'default',
                    },
                  }}
                >
                  {message.sender.id !== globalState.user.id && (
                    <>
                      <ListItemAvatar>
                        <Avatar
                          alt="Profile Picture"
                          src={message.sender.avatar}
                        />
                      </ListItemAvatar>
                      <ListItemText
                        sx={styles.cnvBox}
                        primary={message.sender.name}
                        secondary={message.content}
                      ></ListItemText>
                    </>
                  )}

                  {message.sender.id === globalState.user.id && (
                    <>
                      <ListItemText
                        // primary={message.sender.name}
                        secondary={message.content}
                        sx={{
                          ...styles.cnvBox,
                          color: 'white',
                          maxWidth: '40%',
                          border: '1px solid #f0f0f0',
                          borderRadius: 4,
                          padding: 2,
                          marginRight: 2,
                          marginLeft: 'auto',
                          backgroundColor: (theme) =>
                            theme.palette.primary.main,
                          boxShadow: '14px 18px 21px -10px rgba(0,0,0,0.25)',
                        }}
                      ></ListItemText>
                      <ListItemAvatar>
                        <Avatar
                          alt="Profile Picture"
                          src={message.sender.avatar}
                        />
                      </ListItemAvatar>
                    </>
                  )}
                </ListItem>
              </React.Fragment>
            );
          })
        : ''}
    </List>
  );
};
